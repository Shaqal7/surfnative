[1mdiff --git a/screens/SignInScreen.js b/screens/SignInScreen.js[m
[1mindex f954379..ee4fdc7 100644[m
[1m--- a/screens/SignInScreen.js[m
[1m+++ b/screens/SignInScreen.js[m
[36m@@ -11,59 +11,83 @@[m [mimport {[m
 import { styles } from './styles';[m
 // import { login } from '../redux/actions';[m
 [m
[32m+[m[32mfunction ErrorMessage(props) {[m
[32m+[m[32m  const { message } = props;[m
[32m+[m[32m  return ([m
[32m+[m[32m    <View style={styles.errorContainer}>[m
[32m+[m[32m      <Text style={styles.errorText}>{ message }</Text>[m
[32m+[m[32m    </View>[m
[32m+[m[32m  );[m
[32m+[m[32m}[m
[32m+[m
 export default class SignInScreen extends Component {[m
   static navigationOptions = { title: 'Sign In', }[m
[31m-  static const { navigation } = this.props;[m
 [m
[31m-  state = { email: '', password: '' };[m
[31m-[m
[31m-  /*[m
[31m-  login = () => {[m
[31m-    this.props.login(this.state.user)[m
[31m-    this.setState({ user: {email: '', password: ''}})[m
[31m-  }[m
[32m+[m[32m  state = { email: '', password: '', errors: '' };[m
 [m
[31m-  changeEmail(email){[m
[31m-    new_state = {email: email, password: this.state.user.password}[m
[31m-    this.setState({user: new_state})[m
[31m-  }[m
[31m-[m
[31m-  changePassword(password){[m
[31m-    new_state = {email: this.state.user.email, password: password}[m
[31m-    this.setState({user: new_state})[m
[31m-  }[m
[31m-  */[m
[31m-[m
[31m-  _signInAsync = async () => {[m
[32m+[m[32m  // curl --data "user[email]=ezio@email.com&user[password]=fabrizio" 0.0.0.0:3000/users/sign_in.json[m
[32m+[m[32m  signInAsync = async () => {[m
[32m+[m[32m    const { navigation } = this.props;[m
     // perform AJAX request[m
 [m
     // AJAX request returns token[m
[31m-    const token = "a_test_token"[m
[32m+[m[32m    const token = 'a_test_token';[m
 [m
     // AJAX request returns error[m
[31m-    const errors = "wrong credentials"[m
[31m-[m
[31m-    if (errors) {[m
[31m-      renderErrors();[m
[32m+[m[32m    const errorMessage = '';[m
[32m+[m[32m    console.log(this.state.email);[m
[32m+[m[32m    console.log(this.state.password);[m
[32m+[m[32m    this.getMoviesFromApi()[m
[32m+[m[32m    if (errorMessage) {[m
[32m+[m[32m      this.setState({ errors: errorMessage });[m
     } else {[m
[31m-      saveToken();[m
[31m-    };[m
[32m+[m[32m      await AsyncStorage.setItem('userToken', token);[m
[32m+[m[32m      navigation.navigate('App');[m
[32m+[m[32m    }[m
   };[m
 [m
[31m-  renderErrors = () => {}[m
[32m+[m[32m  getMoviesFromApi = async () => {[m
[32m+[m[32m    const { email, password } = this.state;[m
[32m+[m[32m    try {[m
[32m+[m[32m      let response = await fetch('http://192.168.1.24:3000/users/sign_in.json', {[m
[32m+[m[32m        method: 'POST',[m
[32m+[m[32m        headers: { 'Accept': 'application/json', 'Content-Type': 'application/json', },[m
[32m+[m[32m        body: JSON.stringify({user: { email: 'ezio@email.com', password: 'fabrizio', }}),[m
[32m+[m[32m      });[m
[32m+[m[32m      let responseJson = await response.json();[m
[32m+[m[32m      console.log(responseJson);[m
[32m+[m[32m      return responseJson[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error(error);[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
 [m
[31m-  saveToken = async () => {[m
[31m-    await AsyncStorage.setItem('userToken', token);[m
[31m-    navigation.navigate('App');[m
[32m+[m[32m  createUserSession = () => {[m
[32m+[m[32m    return fetch('0.0.0.0:3000/users/sign_in.json', {[m
[32m+[m[32m      method: 'POST',[m
[32m+[m[32m      body: JSON.stringify({[m
[32m+[m[32m        user: {[m
[32m+[m[32m          email: 'ezio@email.com',[m
[32m+[m[32m          password: 'fabrizio',[m
[32m+[m[32m        }[m
[32m+[m[32m      }),[m
[32m+[m[32m    }).then((response) => response.json())[m
[32m+[m[32m      .then((responseJson) => {[m
[32m+[m[32m        console.log(responseJson);[m
[32m+[m[32m      })[m
[32m+[m[32m      .catch((error) => {[m
[32m+[m[32m        console.error(error);[m
[32m+[m[32m      });[m
   }[m
 [m
   render() {[m
[31m-    const { email, password } = this.state;[m
[32m+[m[32m    const { email, password, errors } = this.state;[m
     const { navigation } = this.props;[m
[32m+[m[32m    const message = '';[m
     return ([m
       <React.Fragment>[m
[32m+[m[32m        { message ? <ErrorMessage message={message} /> : null }[m
         <View style={styles.container}>[m
[31m-          <Text>Test</Text>[m
           <Text>Login</Text>[m
           <Input[m
             style={styles.textInput}[m
[36m@@ -82,7 +106,7 @@[m [mexport default class SignInScreen extends Component {[m
           />[m
           <Button[m
             title="Login"[m
[31m-            onPress={this._signInAsync}[m
[32m+[m[32m            onPress={this.signInAsync}[m
             buttonStyle={styles.button}[m
           />[m
           <Button[m
[1mdiff --git a/screens/styles.js b/screens/styles.js[m
[1mindex fd89543..46494e9 100644[m
[1m--- a/screens/styles.js[m
[1m+++ b/screens/styles.js[m
[36m@@ -17,5 +17,20 @@[m [mexport const styles = StyleSheet.create({[m
     borderColor: 'gray',[m
     borderWidth: 1,[m
     marginTop: 8[m
[32m+[m[32m  },[m
[32m+[m[32m  errorText: {[m
[32m+[m[32m    fontSize: 18,[m
[32m+[m[32m    color: 'white',[m
[32m+[m[32m  },[m
[32m+[m[32m  errorContainer: {[m
[32m+[m[32m    borderColor: 'black',[m
[32m+[m[32m    borderWidth: 2,[m
[32m+[m[32m    borderLeftWidth: 0,[m
[32m+[m[32m    borderRightWidth: 0,[m
[32m+[m[32m    paddingTop: 10,[m
[32m+[m[32m    paddingBottom: 10,[m
[32m+[m[32m    paddingRight: 50,[m
[32m+[m[32m    paddingLeft: 50,[m
[32m+[m[32m    backgroundColor: 'red',[m
   }[m
 });[m
